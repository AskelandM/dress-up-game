@page "/"
@using System.Collections
@inject IOutfitRepository OutfitRepo

<PageTitle>Marty Dress Up</PageTitle>

<div class="page-wrapper">
    <div class="header-wrapper">
        <h1 class="page-title">Marty Dress Up Game</h1>
        <div class="save-outfit">
            <MudTextField @bind-Value="outfitName" Label="Outfit Name" Variant="Variant.Outlined" />

            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="SaveOutfit" Style="margin: 8px">
                Save
            </MudButton>
        </div>
        <div class="retrieve-outfit">
            <MudSelect @bind-Value="currentSaved" Clearable="true" Placeholder="Saved Outfits - None Selected" Variant="Variant.Outlined" Style="margin: 8px">
                @foreach (var option in savedOutfits) {
                    <MudSelectItem Value="option" />
                }
            </MudSelect>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="RetrieveOutfit" Style="margin: 8px">
                Select
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DropShadow="false" OnClick="UpdateOutfit" Style="margin: 8px">
                Update
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DropShadow="false" OnClick="DeleteOutfit" Style="margin: 8px">
                Delete
            </MudButton>
        </div>
    </div>

    <div class="page">
       <div class="outfit-display">
            <Display outfit="@outfit" />
        </div>

        <div class="outfit-selector">
            <Selector OnSelectionChanged="HandleOutfitChanged" />
        </div>
    </div>
</div>


@code {
    private Outfit outfit = new Outfit {
        Parts = new Dictionary<string, string> {
            { "pants", "black-skinny-jeans.png" },
            { "shirt", "white-tank-top.png" },
            { "jacket", "red-flannel.png" },
            { "arms", "arms.png" },
            { "hair", "2020s.png" },
            { "face", "2020s.png" },
            { "bangs", "2020s.png" }}
    };
    private string outfitName = string.Empty; // text field
    private List<string> changedPart = new List<string>{"empty", "empty"};
    private List<string> savedOutfits = new List<string>();
    private string currentSaved = string.Empty; // dropdown

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            savedOutfits = await OutfitRepo.LoadOutfitsAsync();
        }
    }

    private void HandleOutfitChanged(string[] arr)
    {
        outfit.Parts[arr[0]] = arr[1];
    }
    private async Task SaveOutfit()
    {
        savedOutfits = await OutfitRepo.SaveOutfitAsync(outfitName, outfit);
    }

    private async Task RetrieveOutfit() {
        Outfit? newFit = await OutfitRepo.GetOutfitAsync(currentSaved);
        if (newFit != null) {
            outfit = newFit;
        }
        else {
            Console.WriteLine($"No outfit found with name '{currentSaved}'");
        }
    }

    private async Task UpdateOutfit() {
        // set selected outfit from dropdown to whatever character is wearing
        await OutfitRepo.SaveOutfitAsync(currentSaved, outfit);
    }

    private async Task DeleteOutfit() {
        // TODO: ask for confirmation?
        savedOutfits = await OutfitRepo.DeleteOutfitAsync(currentSaved);
        // then set dropdown to empty
        currentSaved = "";
    }
}
