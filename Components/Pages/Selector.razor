@page "/selector"
@rendermode InteractiveServer

@* Displays the clothing item options *@

<MudTabs>
    @foreach (var category in Parts.Keys)
    {
        <MudTabPanel Text="@category">
            @foreach (var option in Parts[category])
            {
                <MudButton OnClick="() => ChangePart(category, option)">
                    @DisplayName(option)
                </MudButton>
            }
        </MudTabPanel>
    }
</MudTabs>

@code {
    // category -> list of available options (file paths)
    private Dictionary<string, List<string>> Parts = new();

    [Parameter] public Outfit outfit { get; set; } = new();
    [Parameter] public EventCallback<Outfit> OnOutfitChanged { get; set; }

    protected override void OnInitialized()
    {
        var imagesRoot = Path.Combine(Environment.CurrentDirectory, "wwwroot/images");

        if (Directory.Exists(imagesRoot))
        {
            foreach (var categoryDir in Directory.GetDirectories(imagesRoot))
            {
                var category = Path.GetFileName(categoryDir); // e.g. "hair"
                var options = Directory.GetFiles(categoryDir, "*.png").ToList();
                Parts[category] = options;
            }
        }
    }

    private async Task ChangePart(string category, string file)
    {
        outfit.Parts[category] = file;
        await OnOutfitChanged.InvokeAsync(outfit);
    }

    private string DisplayName(string filePath)
    {
        var fileName = Path.GetFileNameWithoutExtension(filePath);
        return fileName.Replace("-", " ").Replace("_", " "); 
    }
}